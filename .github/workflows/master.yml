name: master

on: 
  push:
    branches:
      - master

jobs:
  build:

    runs-on: windows-latest

    env:
        projName: V2RayGCon
        projCfg: Release
        releaseNoteUrl: "https://vrnobody.github.io/V2RayGCon/04-dev/01-release-log/"
        verStr: '1.4.x'
        boxAppend: box
        v2rayCorePkgName: 'v2ray-windows-32.zip'
        v2rayCoreVer: 'v4.26.0'
        # https://github.com/v2ray/v2ray-core/releases/download/v4.20.0/v2ray-windows-32.zip
        v2rayCoreUrl: 'https://github.com/v2ray/v2ray-core/releases/download'

    steps:
        - name: Checkout master
          uses: actions/checkout@v2

        - name: Show versions
          run: |
            python --version
            echo "power shell version:"
            $Host.Version

        - name: Setup .net framework env
          uses: vrnobody/Setup-DotNetFrameworkEnv@v1

        - name: Restore packages
          run: nuget restore ${env:projName}.sln

        - name: Build solution
          run: msbuild ${env:projName}.sln -p:Configuration=${env:projCfg}

        - name: Run unit tests
          run: |
            function Invoke-VSTest {
              & "vstest.console.exe" $args
              if(-not $?){ throw "fail!" }
            }
            Invoke-VSTest "V2RayGConTests\bin\${{ env.projCfg }}\V2RayGCon.Test.dll"
            Invoke-VSTest "VgcApisTests\bin\${{ env.projCfg }}\VgcApisTests.dll"
            Invoke-VSTest "Plugins\ProxySetterTests\bin\${{ env.projCfg }}\ProxySetterTests.dll"

        - name: Create assets
          shell: pwsh
          run: |
            $outdir = "${env:projName}/bin/${env:projCfg}"
            Compress-Archive -Path ${outdir}/* ${env:projName}'.zip'
            Invoke-WebRequest -Uri "${env:v2rayCoreUrl}/${env:v2rayCoreVer}/${env:v2rayCorePkgName}" -OutFile "${env:v2rayCorePkgName}"
            Expand-Archive "${env:v2rayCorePkgName}" -DestinationPath "${outdir}/core"
            Compress-Archive -Path ${outdir}/* ${env:projName}'-'${env:boxAppend}'.zip'
            $hash1 = Get-FileHash "${env:projName}.zip" -Algorithm MD5
            $hash2 = Get-FileHash "${env:projName}-${env:boxAppend}.zip" -Algorithm MD5
            $hv1 = $hash1.Hash
            $hv2 = $hash2.Hash
            echo "::set-env name=hashVgcZip::${hv1}"
            echo "::set-env name=hashVgcBoxZip::${hv2}"

        - name: Create Release
          id: create_release
          uses: actions/create-release@master
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              tag_name: ${{ env.verStr }}
              release_name: 'v${{ env.verStr }}'
              body: |
                [Release logs 发布记录](${{ env.releaseNoteUrl }})
                
                #### 变化：
                 * 变化1
                 * 变化2
                
                #### MD5:
                ${{ env.projName }}.zip (${{ env.hashVgcZip }})
                ${{ env.projName }}-${{ env.boxAppend }}.zip (${{ env.hashVgcBoxZip }})

                其中V2RayGCon-box.zip打包了v2ray-core-win32 ${{ env.v2rayCoreVer }}
              draft: true
              prerelease: false

        - name: Upload ${{ env.projName }}.zip
          uses: actions/upload-release-asset@v1.0.1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} 
              asset_path: ./${{ env.projName }}.zip
              asset_name: ${{ env.projName }}.zip
              asset_content_type: application/zip

        - name: Upload ${{ env.projName }}-${{ env.boxAppend }}.zip
          uses: actions/upload-release-asset@v1.0.1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} 
              asset_path: ./${{ env.projName }}-${{ env.boxAppend }}.zip
              asset_name: ${{ env.projName }}-${{ env.boxAppend }}.zip
              asset_content_type: application/zip
